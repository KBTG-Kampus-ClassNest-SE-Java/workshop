plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.sonarqube' version '4.4.1.3373'
	id 'com.diffplug.spotless' version '6.22.0'
}

jacocoTestReport {
	reports {
		xml.required = true
		html.required = true
	}
}

spotless {
	java {
		importOrder()
		removeUnusedImports()
		googleJavaFormat().aosp()
		formatAnnotations()
	}
}

group = 'com.kampus'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'

	 implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.projectlombok:lombok:1.18.22'
    implementation 'org.postgresql:postgresql:42.7.3'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'com.tngtech.archunit:archunit-junit5:1.2.1'
	testImplementation 'org.testcontainers:postgresql:1.15.3'
}

tasks.named('test') {
	useJUnitPlatform()
}

sonar {
  properties {
	property "sonar.gradle.skipCompile", "true"
	property "sonar.projectKey", "aorjoa-bootcamp"
	property "sonar.token", System.getenv("SONAR_TOKEN")
	property "sonar.host.url", System.getenv("SONAR_HOST_URL")
  }
}